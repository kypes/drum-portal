name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: drum_portal_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2.2"
          bundler-cache: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "yarn"

      - name: Install dependencies
        run: |
          bundle install
          yarn install

      - name: Set up database
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@localhost:5432/drum_portal_test
        run: |
          bundle exec rails db:prepare

      - name: Run tests
        env:
          RAILS_ENV: test
          DATABASE_URL: postgres://postgres:password@localhost:5432/drum_portal_test
          REDIS_URL: redis://localhost:6379/1
        run: |
          bundle exec rspec

      - name: Run security checks
        run: |
          bundle exec brakeman -q -w2

      - name: Run linter
        run: |
          bundle exec rubocop

      - name: Build assets
        run: |
          yarn build:css

  deploy:
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t drum-portal:${{ github.sha }} .

      # Add deployment steps here when ready
      # For now, we'll just show a success message
      - name: Deployment placeholder
        run: |
          echo "âœ… Tests passed! Ready for deployment"
